[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Solplots is my interpretation of the world. Not just through data, but through the stories we tell and the thoughts and beliefs we employ to construct our reality. Plotting and thotting is a mantra, for it embraces the dichotomy of how we as humans utilize the power inside us (our thoughts) and make our mark on the world and others around us (our plots).\n\n\n\n\n\n\nI come from Kansas, the Sunflower State, and the last one admitted to the Union before the Civil War. In fact, the inception of its territory all but sealed the fate for the United States to fall into conflict.\nThe moral of the story of the Kansas-Nebraska Act of 1854 and “Bleeding Kansas” is thus: the history United States is simply the sum of millions of plots and experiments for which to employ humans to extract resources for capital. Case in point: popular sovereignty. Dispelling all precedents, the Kansas-Nebraska Act stated that the territories of Kansas and Nebraska could decide if they were to b a “slave” state or a “free” state through the process of popular sovereignty. That is, the people who “live” in the territories will vote to declare chattel slavery legal or illegal during the process of statehood.\nThis led to thousands of people, both pro-slavery and abolitionists, from across the country to flood Kansas, leading to deadly violence that is sometimes referred to as the pre-Civil War. Could Congress not have been this unprepared to not have foreseen this result, or was this a carefully crafted experiment more concerned with westward expansion and manifest destiny than strengthening the rights of free people?\nMoreover, the indigenous peoples of these lands were prohibited from participating in popular sovereign, for their way of life was to be erased from these lands regardless of which way the vote went. At the end of the day, what were we actually voting for if we still had to be subservient to capital and the U.S. government?\nThe history of my home has great influence on my worldview. The moral of this story is that governments and those in power are constantly developing plots and running experiments on the world as a whole, sometimes for general improvement, mostly for the expansion of the power of capital. Even today, with this current administration’s position on who gets to be born a citizen in this country, we are about to see a profound increase in the number of stateless humans within our borders. All because one state decides not to have birthright citizenship while another maintains that right. It’s plots and experiments.\nTherefore, it is imperative that we as humans understand that this power to plot and experiment also belongs to us. And that we may use this power to improve our lives without having to ask permission from someone else."
  },
  {
    "objectID": "collections.html",
    "href": "collections.html",
    "title": "Collections",
    "section": "",
    "text": "A curated feed of data visualizations, code repositories and tools.\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "demos/bobross.html",
    "href": "demos/bobross.html",
    "title": "Color Frequency",
    "section": "",
    "text": "Every Tuesday, volunteers prepare a data set for people to practice data tidying and plotting skills with R. This is how I’ve interpreted Bob Ross Paintings.\nUpon learning that the producers intentionally limited the show’s palette to 18 colors, I wanted to find the answer to this question: how often is each color used?\nIt’s also a great example because this information can’t be immediately gleaned from the data set. The granularity is at the episode level, meaning 403 episodes of the show are contained in 403 observations in the data.\nThe information pertaining to colors used and those colors’ hex code had to be messaged out of the source and be organized into a new data frame from which to build a plot."
  },
  {
    "objectID": "demos/bobross.html#data-source",
    "href": "demos/bobross.html#data-source",
    "title": "Color Frequency",
    "section": "",
    "text": "Every Tuesday, volunteers prepare a data set for people to practice data tidying and plotting skills with R. This is how I’ve interpreted Bob Ross Paintings.\nUpon learning that the producers intentionally limited the show’s palette to 18 colors, I wanted to find the answer to this question: how often is each color used?\nIt’s also a great example because this information can’t be immediately gleaned from the data set. The granularity is at the episode level, meaning 403 episodes of the show are contained in 403 observations in the data.\nThe information pertaining to colors used and those colors’ hex code had to be messaged out of the source and be organized into a new data frame from which to build a plot."
  },
  {
    "objectID": "demos/bobross.html#simple-code-reproduction",
    "href": "demos/bobross.html#simple-code-reproduction",
    "title": "Color Frequency",
    "section": "Simple code reproduction",
    "text": "Simple code reproduction\n\n\nCode\n# library(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(stringr)\n# library(DataExplorer)\nlibrary(tidyr)\nlibrary(extrafont)\nlibrary(ggtext)\nlibrary(tidytuesdayR)\n\n#\ntt = tidytuesdayR::tt_load(\"2023-02-21\")\ndf = tt$bob_ross\n\n# font_import()\nloadfonts(quiet = TRUE)\n\n\n# total times used --------------------------------------------------------\n\ncolornames = c(\"Titanium_White\",\n         \"Bright_Red\",\n         \"Alizarin_Crimson\",\n         \"Van_Dyke_Brown\",\n         \"Cadmium_Yellow\",\n         \"Yellow_Ochre\",\n         \"Phthalo_Blue\",\n         \"Midnight_Black\",\n         \"Sap_Green\",\n         \"Indian_Yellow\",\n         \"Dark_Sienna\",\n         \"Prussian_Blue\",\n         \"Phthalo_Green\",\n         \"Black_Gesso\",\n         \"Burnt_Umber\",\n         \"Liquid_Clear\",\n         \"Liquid_Black\",\n         \"Indian_Red\") |&gt; sort()\n\n\n\n\n## colors\n\n# get_code = function(df, var) {df |&gt; filter({{ var }})}\n# get_code(df, Yellow_Ochre) |&gt; view()\n\ncols = tibble(\n  color_name = colornames,\n  codes = c('#4E1500',\n                     '#000000',\n                     '#DB0000',\n                     '#8A3324',\n                     '#FFEC00',\n                     '#5F2E1F',\n                     '#CD5C5C',\n                     '#FFB800',\n                     '#000000',\n                     '#FFFFFF',\n                     '#000000',\n                     '#0C0040',\n                     '#102E3C',\n                     '#021E44',\n                     '#0A3410',\n                     '#FFFFFF',\n                     '#221B15',\n                     '#C79B00'\n                     )\n)\n\n# aggregate sums of TRUES for each color column to arrive at total counts for each color across all 403 episodes\ncounts = \n  df |&gt; \n  select(10:ncol(df)) |&gt; \n  mutate(across(everything(), ~ sum(.))) |&gt; \n  distinct() |&gt; \n  pivot_longer(1:18,\n               names_to = \"color_name\",\n               values_to = \"count\") |&gt; \n  inner_join(cols) |&gt; \n  arrange(color_name) |&gt; \n  mutate(color_name = str_replace(color_name, \"_\", \" \") |&gt; str_replace(\"_\", \" \"),\n         color_label = if_else(color_name %in% c(\"Titanium White\", \"Liquid Clear\"), \"black\", codes)) \n\n\nOnce we have a data frame titled “counts”, we can then use ggplot to visualize the data.\n\n\nCode\ncounts |&gt; \n  ggplot(aes(x = count, \n             y = reorder(color_name, count),\n             fill = color_name,\n             label = count)) + \n  geom_col(show.legend = FALSE) +\n  geom_text(aes(y = color_name),\n            show.legend = FALSE,\n            hjust = -.1,\n            family = \"ITC Korinna\",\n            size = 5) +\n  scale_fill_manual(values = counts$codes) +\n  scale_x_continuous(expand = c(0, 0), limits = c(0, 425)) +\n  theme_minimal() +\n  labs(title = \"&lt;b&gt;Color Frequency, Bob Ross' &lt;i&gt;The Joy of Painting&lt;/i&gt;&lt;/b&gt;\",\n       subtitle = \"Across 403 episodes (paintings), how often is each color used?\",\n       caption = \"Tidy Tuesday 21 February 2023&lt;br&gt;&lt;b&gt;@solplots&lt;/b&gt;\") +\n  theme(text = element_text(family = \"ITC Korinna\",\n                            size = 16,\n                            color = \"black\",\n                            face = \"bold\"),\n        plot.title = element_markdown(),\n        plot.subtitle = element_markdown(),\n        axis.title = element_blank(),\n        axis.text.x = element_blank(),\n        panel.grid = element_blank(),\n        plot.background = element_rect(fill = '#FFEDA3'),\n        panel.background = element_rect(fill = \"#FFEDA3\",\n                                        color = \"#FFEDA3\"),\n        plot.caption = element_markdown()) \n\n\n\n\n\nThis is just one way to plot this data. I also liked this interpretation by Art Steinmetz.\n\nGenerated with R R version 4.3.2 (2023-10-31 ucrt) on 2025-07-13"
  },
  {
    "objectID": "demos/mta_art_explorer.html",
    "href": "demos/mta_art_explorer.html",
    "title": "MTA Art Explorer",
    "section": "",
    "text": "MTA Permanent Art Catalog\nExplore the permanent art collection in MTA stations across New York City. This is intended to demonstrate how quickly one can spin up an app that enables quick and easy exploration of a data set from New York State’s Open Data Portal.\n\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()         masks stats::filter()\n✖ readr::guess_encoding() masks rvest::guess_encoding()\n✖ dplyr::lag()            masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nAttaching package: 'janitor'\n\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\n\nRows: 381 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): Agency, Station Name, Line, Artist, Art Title, Art Material, Art De...\ndbl (1): Art Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\nMTA Permanent Art Catalog\n\n\n\nSelect Agency:\n\nNYCT\nMetro-North\nLIRR\n\n\n\n\n\n\nSelect Line:\n\n\n\n\n\n\n\n\nSelect Station:\n\n\n\n\n\n\n\n\nSelect Artist:\n\n\n\n\n\n\n\n\nSelect Artwork Title:"
  },
  {
    "objectID": "demos.html",
    "href": "demos.html",
    "title": "Demos",
    "section": "",
    "text": "This is a collection of my plots and their reproducible R scripts.\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nMTA Art Explorer\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nColor Frequency\n\n\n\n\n\nSubmission to Tidy Tuesday for Week 8, 2023\n\n\n\n\n\n\nJul 9, 2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Resume",
    "section": "",
    "text": "📧 peter@solplots.com\n\n💼 LinkedIn\n\n🐙 GitHub"
  },
  {
    "objectID": "resume.html#data-scientist-i-strategic-routing-worldpay-inc",
    "href": "resume.html#data-scientist-i-strategic-routing-worldpay-inc",
    "title": "Resume",
    "section": "Data Scientist I, Strategic Routing — Worldpay, Inc",
    "text": "Data Scientist I, Strategic Routing — Worldpay, Inc\nRemote | Dec 2023 – Present\n\nImplements network routing product to maximize merchant cost savings on card processing fees\nPerforms ad-hoc analyses simulating potential merchant savings using a “least cost routing” method\nEngineers routing table update processes by integrating various documents and requests\nMonitors product performance to match negotiated transaction volumes from network deals"
  },
  {
    "objectID": "resume.html#data-scientist-transit-rail-planning-vanasse-hangen-brustlin-inc.-vhb",
    "href": "resume.html#data-scientist-transit-rail-planning-vanasse-hangen-brustlin-inc.-vhb",
    "title": "Resume",
    "section": "Data Scientist, Transit & Rail Planning — Vanasse Hangen Brustlin, Inc. (VHB)",
    "text": "Data Scientist, Transit & Rail Planning — Vanasse Hangen Brustlin, Inc. (VHB)\nWashington, D.C. | Sept 2022 - Dec 2023\n\nAnalyzed General Transit Feed Specification (GTFS) data in conjunction with Automated Passenger Count data to program R scripts and output load factor and schedule adherence KPI for transit studies\nDeveloped and maintains a suite of transit planning and origin/destination traffic analysis Shiny Apps known as Data Trippers that resulted in assisting clients’ decision making processes"
  },
  {
    "objectID": "resume.html#data-scientist-ohio-kentucky-indiana-regional-council-of-governments-oki",
    "href": "resume.html#data-scientist-ohio-kentucky-indiana-regional-council-of-governments-oki",
    "title": "Resume",
    "section": "Data Scientist — Ohio Kentucky Indiana Regional Council of Governments (OKI)",
    "text": "Data Scientist — Ohio Kentucky Indiana Regional Council of Governments (OKI)\nCincinnati, Ohio | May 2021 - Aug 2022\n\nRe-purposed open-source R scripts to develop inaugural method evaluating roadway safety performance in the 8-county OKI region which resulted in the Excess Expected Crashes (EEC) KPI\nPresented methodology at area analytics conferences and the useR! Conference 2022 (recognized)\nVisualized of existing conditions and commodity flow using Freight Analysis Framework (FAF)"
  }
]