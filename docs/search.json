[
  {
    "objectID": "collections.html",
    "href": "collections.html",
    "title": "Collections",
    "section": "",
    "text": "A curated feed of data visualizations, code repositories and tools.\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "demos/bobross.html",
    "href": "demos/bobross.html",
    "title": "Color Frequency",
    "section": "",
    "text": "Bob Ross Color Frequency Analysis"
  },
  {
    "objectID": "demos/bobross.html#data-source",
    "href": "demos/bobross.html#data-source",
    "title": "Color Frequency",
    "section": "Data Source",
    "text": "Data Source\nEvery Tuesday, volunteers prepare a data set for people to practice data tidying and plotting skills with R. This is how I‚Äôve interpreted Bob Ross Paintings.\nUpon learning that the producers intentionally limited the show‚Äôs palette to 18 colors, I wanted to find the answer to this question: how often is each color used?\nIt‚Äôs also a great example because this information can‚Äôt be immediately gleaned from the data set. The granularity is at the episode level, meaning 403 episodes of the show are contained in 403 observations in the data.\nThe information pertaining to colors used and those colors‚Äô hex code had to be messaged out of the source and be organized into a new data frame from which to build a plot."
  },
  {
    "objectID": "demos/bobross.html#simple-code-reproduction",
    "href": "demos/bobross.html#simple-code-reproduction",
    "title": "Color Frequency",
    "section": "Simple code reproduction",
    "text": "Simple code reproduction\n\n\nCode\n# library(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(stringr)\n# library(DataExplorer)\nlibrary(tidyr)\nlibrary(extrafont)\nlibrary(ggtext)\nlibrary(tidytuesdayR)\n\n#\ntt = tidytuesdayR::tt_load(\"2023-02-21\")\ndf = tt$bob_ross\n\nsuppressMessages({\n  font_import()\n  loadfonts()\n})\n\n\nImporting fonts may take a few minutes, depending on the number of fonts and the speed of the system.\nContinue? [y/n] \n\n\nCode\n# data analysis -----------------------------------------------------------\n\n# plot_missing(df) # nothing is missing!!\n\n## I want 2 plots from this data:\n## - One showing the total times each color was used\n## - One showing mean colors used per season (colored by most commonly used)\n\n\n# total times used --------------------------------------------------------\n\ncolornames = c(\"Titanium_White\",\n         \"Bright_Red\",\n         \"Alizarin_Crimson\",\n         \"Van_Dyke_Brown\",\n         \"Cadmium_Yellow\",\n         \"Yellow_Ochre\",\n         \"Phthalo_Blue\",\n         \"Midnight_Black\",\n         \"Sap_Green\",\n         \"Indian_Yellow\",\n         \"Dark_Sienna\",\n         \"Prussian_Blue\",\n         \"Phthalo_Green\",\n         \"Black_Gesso\",\n         \"Burnt_Umber\",\n         \"Liquid_Clear\",\n         \"Liquid_Black\",\n         \"Indian_Red\") |&gt; sort()\n\n\n\n\n## colors\n\n# get_code = function(df, var) {df |&gt; filter({{ var }})}\n# get_code(df, Yellow_Ochre) |&gt; view()\n\ncols = tibble(\n  color_name = colornames,\n  codes = c('#4E1500',\n                     '#000000',\n                     '#DB0000',\n                     '#8A3324',\n                     '#FFEC00',\n                     '#5F2E1F',\n                     '#CD5C5C',\n                     '#FFB800',\n                     '#000000',\n                     '#FFFFFF',\n                     '#000000',\n                     '#0C0040',\n                     '#102E3C',\n                     '#021E44',\n                     '#0A3410',\n                     '#FFFFFF',\n                     '#221B15',\n                     '#C79B00'\n                     )\n)\n\n# aggregate sums of TRUES for each color column to arrive at total counts for each color across all 403 episodes\ncounts = \n  df |&gt; \n  select(10:ncol(df)) |&gt; \n  mutate(across(everything(), ~ sum(.))) |&gt; \n  distinct() |&gt; \n  pivot_longer(1:18,\n               names_to = \"color_name\",\n               values_to = \"count\") |&gt; \n  inner_join(cols) |&gt; \n  arrange(color_name) |&gt; \n  mutate(color_name = str_replace(color_name, \"_\", \" \") |&gt; str_replace(\"_\", \" \"),\n         color_label = if_else(color_name %in% c(\"Titanium White\", \"Liquid Clear\"), \"black\", codes)) \n \ncounts |&gt; \n  ggplot(aes(x = count, \n             y = reorder(color_name, count),\n             fill = color_name,\n             label = count)) + \n  geom_col(show.legend = FALSE) +\n  geom_text(aes(y = color_name),\n            show.legend = FALSE,\n            hjust = -.1,\n            family = \"ITC Korinna\",\n            size = 5) +\n  scale_fill_manual(values = counts$codes) +\n  scale_x_continuous(expand = c(0, 0), limits = c(0, 425)) +\n  theme_minimal() +\n  labs(title = \"&lt;b&gt;Color Frequency, Bob Ross' &lt;i&gt;The Joy of Painting&lt;/i&gt;&lt;/b&gt;\",\n       subtitle = \"Across 403 episodes (paintings), how often is each color used?\",\n       caption = \"Tidy Tuesday 21 February 2023&lt;br&gt;&lt;b&gt;@solplots&lt;/b&gt;\") +\n  theme(text = element_text(family = \"ITC Korinna\",\n                            size = 16,\n                            color = \"black\",\n                            face = \"bold\"),\n        plot.title = element_markdown(),\n        plot.subtitle = element_markdown(),\n        axis.title = element_blank(),\n        axis.text.x = element_blank(),\n        panel.grid = element_blank(),\n        plot.background = element_rect(fill = '#FFEDA3'),\n        panel.background = element_rect(fill = \"#FFEDA3\",\n                                        color = \"#FFEDA3\"),\n        plot.caption = element_markdown()) \n\n\n\n\n\n\nGenerated with R R version 4.3.2 (2023-10-31 ucrt) on 2025-07-09"
  },
  {
    "objectID": "demos.html",
    "href": "demos.html",
    "title": "Demos",
    "section": "",
    "text": "A collection of my own data visualizations and interactive projects.\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nColor Frequency\n\n\n\n\n\nSubmission to Tidy Tuesday for Week 8, 2023\n\n\n\n\n\n\nJul 9, 2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Resume",
    "section": "",
    "text": "üìß peter@solplots.com\n\nüíº LinkedIn\n\nüêô GitHub"
  },
  {
    "objectID": "resume.html#data-scientist-i-strategic-routing-worldpay-inc",
    "href": "resume.html#data-scientist-i-strategic-routing-worldpay-inc",
    "title": "Resume",
    "section": "Data Scientist I, Strategic Routing ‚Äî Worldpay, Inc",
    "text": "Data Scientist I, Strategic Routing ‚Äî Worldpay, Inc\nRemote | Dec 2023 ‚Äì Present\n\nImplements network routing product to maximize merchant cost savings on card processing fees\nPerforms ad-hoc analyses simulating potential merchant savings using a ‚Äúleast cost routing‚Äù method\nEngineers routing table update processes by integrating various documents and requests\nMonitors product performance to match negotiated transaction volumes from network deals"
  },
  {
    "objectID": "resume.html#data-scientist-transit-rail-planning-vanasse-hangen-brustlin-inc.-vhb",
    "href": "resume.html#data-scientist-transit-rail-planning-vanasse-hangen-brustlin-inc.-vhb",
    "title": "Resume",
    "section": "Data Scientist, Transit & Rail Planning ‚Äî Vanasse Hangen Brustlin, Inc.¬†(VHB)",
    "text": "Data Scientist, Transit & Rail Planning ‚Äî Vanasse Hangen Brustlin, Inc.¬†(VHB)\nWashington, D.C. | Sept 2022 - Dec 2023\n\nAnalyzed General Transit Feed Specification (GTFS) data in conjunction with Automated Passenger Count data to program R scripts and output load factor and schedule adherence KPI for transit studies\nDeveloped and maintains a suite of transit planning and origin/destination traffic analysis Shiny Apps known as Data Trippers that resulted in assisting clients‚Äô decision making processes"
  },
  {
    "objectID": "resume.html#data-scientist-ohio-kentucky-indiana-regional-council-of-governments-oki",
    "href": "resume.html#data-scientist-ohio-kentucky-indiana-regional-council-of-governments-oki",
    "title": "Resume",
    "section": "Data Scientist ‚Äî Ohio Kentucky Indiana Regional Council of Governments (OKI)",
    "text": "Data Scientist ‚Äî Ohio Kentucky Indiana Regional Council of Governments (OKI)\nCincinnati, Ohio | May 2021 - Aug 2022\n\nRe-purposed open-source R scripts to develop inaugural method evaluating roadway safety performance in the 8-county OKI region which resulted in the Excess Expected Crashes (EEC) KPI\nPresented methodology at area analytics conferences and the useR! Conference 2022 (recognized)\nVisualized of existing conditions and commodity flow using Freight Analysis Framework (FAF)"
  }
]